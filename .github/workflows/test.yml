name: Tests

on:
  push:
    branches: [ main, develop ]
    paths:
      - 'aetherfy_vectors/**'
      - 'tests/**'
      - 'setup.py'
      - 'requirements*.txt'
      - '.github/workflows/test.yml'
  pull_request:
    branches: [ main, develop ]
    paths:
      - 'aetherfy_vectors/**'
      - 'tests/**'
      - 'setup.py'
      - 'requirements*.txt'
      - '.github/workflows/test.yml'
  workflow_dispatch:

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: [3.8, 3.9, "3.10", "3.11", "3.12"]

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements-dev.txt
        pip install -e .

    - name: Lint with flake8
      run: |
        # Stop the build if there are Python syntax errors or undefined names
        flake8 aetherfy_vectors --count --select=E9,F63,F7,F82 --show-source --statistics
        # Exit-zero treats all errors as warnings
        flake8 aetherfy_vectors --count --exit-zero --max-complexity=10 --max-line-length=88 --statistics

    - name: Check code formatting with black
      run: |
        black --check aetherfy_vectors/

    - name: Type check with mypy
      run: |
        mypy aetherfy_vectors/

    - name: Test with pytest
      run: |
        pytest tests/ -v --cov=aetherfy_vectors --cov-report=xml --cov-report=term-missing

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false